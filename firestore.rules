rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Admin collection rules
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.uid == adminId;
      allow write: if false;  // Only modify through Firebase Console
    }

    // Base rules for admin-only collections
    match /{collection}/{document=**} {
      allow read, write: if isAdmin();
    }

    // Public access rules
    match /blog-posts/{post} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /consultations/{consultationId} {
      allow read: if isAdmin();
      allow create: if true;  // Allow public creation
      allow update, delete: if isAdmin();
    }

    match /bookings/{booking} {
      allow read: if request.auth != null || isAdmin();
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    match /chat-messages/{messageId} {
      allow read: if true;
      allow create: if request.resource.data.keys().hasAll(['sessionId', 'text', 'response', 'timestamp'])
        && request.resource.data.sessionId is string
        && request.resource.data.text is string
        && request.resource.data.response is string;
      allow update, delete: if isAdmin();
    }

    match /consultation-rooms/{roomId} {
      allow create: if true;  // Allow anyone to create a consultation room
      allow read: if true;    // Allow reading room details
      allow update: if true;  // Allow updating room status
      allow delete: if false; // Prevent deletion
      
      // Validate consultation room data
      allow write: if request.resource.data.keys().hasAll(['topic', 'clientName', 'clientEmail', 'status', 'startTime'])
        && request.resource.data.topic is string
        && request.resource.data.clientName is string
        && request.resource.data.clientEmail is string
        && request.resource.data.status in ['waiting', 'active', 'ended']
        && request.resource.data.startTime is timestamp;
    }
  }
}